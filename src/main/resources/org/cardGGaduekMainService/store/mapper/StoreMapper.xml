<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.cardGGaduekMainService.store.mapper.StoreMapper">
    <resultMap id="storeMap" type="org.cardGGaduekMainService.store.domain.StoreVO">
        <result column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="address" property="address"/>
        <result column="latitude" property="latitude"/>
        <result column="longitude" property="longitude"/>
        <result column="open_time" property="openTime"/>
        <result column="close_time" property="closeTime"/>
        <result column="store_category" property="storeCategory"/>
    </resultMap>
    <select id="getStores" resultMap="storeMap">
        SELECT *
        FROM store
        WHERE 1=1
        <if test="latitude != null and longitude != null and radius != null">
            AND (6371 * ACOS(COS(RADIANS(#{latitude})) * COS(RADIANS(latitude)) *
            COS(RADIANS(longitude) - RADIANS(#{longitude})) +
            SIN(RADIANS(#{latitude})) * SIN(RADIANS(latitude)))) &lt; #{radius}
        </if>
        <if test="keyword != null and keyword != ''">
            AND (name LIKE CONCAT('%', #{keyword}, '%')
            OR address LIKE CONCAT('%', #{keyword}, '%'))
        </if>
        <if test="storeCategory != null and storeCategory != ''">
            AND store.store_category = #{storeCategory}
        </if>
<!--        <!- 반경 필터링 -->
<!--        <if test="latitude != null and longitude != null and radius != null">-->
<!--            HAVING distance &lt;= #{radius}-->
<!--        </if>-->
        ORDER BY
        CASE
            WHEN name = #{keyword} THEN 1
            WHEN name LIKE CONCAT(#{keyword}, '%') THEN 2
            ELSE 3
        END
    </select>
    <select id="getStoreById" resultMap="storeMap">
    SELECT *
    FROM store
    WHERE id = #{id}
    </select>
<!--  회원-카드 혜택 결과 매핑  -->
    <resultMap id="storeBenefitMap" type="org.cardGGaduekMainService.store.dto.StoreBenefitRawDTO">
        <result column="storeId" property="storeId"/>
        <result column="storeName" property="storeName"/>
        <result column="address" property="address"/>
        <result column="latitude" property="latitude"/>
        <result column="longitude" property="longitude"/>
        <result column="openTime" property="openTime"/>
        <result column="storeCategory" property="storeCategory"/>
        <result column="cardName" property="cardName"/>
        <result column="benefitDescription" property="benefitDescription"/>
    </resultMap>

    <select id="getStoresByMemberCards" parameterType="long" resultMap="storeBenefitMap">
        SELECT
            s.id AS storeId,
            s.name AS storeName,
            s.address,
            s.latitude,
            s.longitude,
            s.open_time AS openTime,
            s.close_time AS closeTime,
            s.store_category AS storeCategory,
            cp.card_product_name AS cardName,
            cb.description AS benefitDescription
        FROM card c
                 JOIN card_product cp ON c.card_product_id = cp.id
                 JOIN card_benefit cb ON cb.card_product_id = cp.id
                 JOIN store s ON cb.benefit_category = s.store_category
        WHERE c.member_id = #{memberId}
        ORDER BY s.store_category, s.name;

    </select>

    <resultMap id="storeBenefitRawMap" type="org.cardGGaduekMainService.store.dto.StoreBenefitRawDTO">
        <result column="storeId" property="storeId"/>
        <result column="storeName" property="storeName"/>
        <result column="address" property="address"/>
        <result column="latitude" property="latitude"/>
        <result column="longitude" property="longitude"/>
        <result column="openTime" property="openTime"/>
        <result column="closeTime" property="closeTime"/>
        <result column="storeCategory" property="storeCategory"/>
        <result column="cardName" property="cardName"/>
        <result column="benefitDescription" property="benefitDescription"/>
    </resultMap>

    <select id="getStoresWithBenefit" parameterType="org.cardGGaduekMainService.store.dto.StoreSearchConditionDTO" resultMap="storeBenefitRawMap">
        SELECT
        s.id AS storeId,
        s.name AS storeName,
        s.address,
        s.latitude,
        s.longitude,
        s.open_time AS openTime,
        s.close_time AS closeTime,
        s.store_category AS storeCategory,
        cp.card_product_name AS cardName,
        cb.description AS benefitDescription
        FROM
        store s
        LEFT JOIN card_benefit cb ON s.store_category = cb.benefit_category
        LEFT JOIN card_product cp ON cb.card_product_id = cp.id
        WHERE 1=1
        <if test="latitude != null and longitude != null and radius != null">
            AND (6371 * ACOS(COS(RADIANS(#{latitude})) * COS(RADIANS(latitude)) *
            COS(RADIANS(longitude) - RADIANS(#{longitude})) +
            SIN(RADIANS(#{latitude})) * SIN(RADIANS(latitude)))) &lt; #{radius}
        </if>
        <if test="keyword != null and keyword != ''">
            AND s.name LIKE CONCAT('%', #{keyword}, '%')
        </if>
        <if test="storeCategory != null and storeCategory != ''">
            AND s.store_category = #{storeCategory}
        </if>
        ORDER BY storeId
    </select>
</mapper>
