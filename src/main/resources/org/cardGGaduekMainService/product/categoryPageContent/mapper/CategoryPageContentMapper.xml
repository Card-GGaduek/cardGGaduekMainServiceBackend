<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.cardGGaduekMainService.product.categoryPageContent.mapper.CategoryPageContentMapper">
    <select id="findAllApplicableBenefitsForMember" parameterType="map" resultType="org.cardGGaduekMainService.product.categoryPageContent.dto.BenefitDetailDTO">
        SELECT
        sb.id,
        sb.card_product_id AS cardProductId,
        cp.card_product_name AS cardName,
        sb.store_name AS storeName,
        sb.description,
        sb.value_type AS valueType,
        sb.rate_value AS rateValue,
        sb.amount_value AS amountValue,
        cpc.id as contentId,
        cpc.image_url AS imageUrl,
        cpc.link_url AS linkUrl,
        cpc.price
        FROM
        store_benefit sb
        JOIN
        card_product cp ON sb.card_product_id = cp.id
        LEFT JOIN
        category_page_content cpc ON sb.store_name = cpc.title AND sb.store_category = cpc.category_name
        WHERE
        sb.store_category = #{categoryName}
        AND sb.card_product_id IN
        <foreach item="cardId" collection="userCardProductIds" open="(" separator="," close=")">
            #{cardId}
        </foreach>
        ORDER BY
        -- 1. 가맹점 이름으로 먼저 정렬하여 그룹핑 효과를 줌
        sb.store_name ASC,
        -- 2. RATE 타입을 AMOUNT 타입보다 우선순위를 높게 설정 (1순위)
        CASE WHEN sb.value_type = 'PERCENT' THEN 1 ELSE 2 END ASC,
        -- 3. 같은 RATE 타입 내에서는 할인율이 높은 순으로 정렬
        sb.rate_value DESC,
        -- 4. 같은 AMOUNT 타입 내에서는 할인 금액이 높은 순으로 정렬
        sb.amount_value DESC
    </select>
</mapper>